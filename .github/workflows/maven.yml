# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: project cicd flow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  ECR_IMAGE: web
  ECR_TAG: latest
  K8S_NAMESPACE: web
  K8S_DEPLOYMENT: web-deployment
  AWS_REGION: ap-south-1
  EKS_CLUSTER_NAME: test

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        run: mvn clean install

      - name: Build & push image on aws ecr
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: web
          tags: latest
          registry: 517641880778.dkr.ecr.ap-south-1.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Slack notification
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_CHANNEL: ci
          SLACK_MESSAGE: 'Continuous integration for rideboost'
          SLACK_TITLE: 'Message'
          SLACK_USERNAME: 'Rideboost'
          SLACK_ICON: "[icon URL]"
          SLACK_COLOR: '#228B22'
          SLACK_Actions_URL: CI
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL_CI }}
          MSG_MINIMAL: true
          
